spring:
    datasource:
        url: jdbc:mysql://localhost:3306/users?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: 

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 10355898582-7e17t0o72s06m2fk10n31l6a6dh3visa.apps.googleusercontent.com
              clientSecret: jWnGUvtDoD-Q0uw-mClWrYrK
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 648114908983776
              clientSecret: df2a68b749163689a13771d316397da9 
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: f15dac593817d833742a
              clientSecret: b5e2c019c958ed5a2a72425a906873f50d6aabac
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
      
      #Google
#Accedo a http://localhost:8080/oauth2/authorize/google?redirect_uri y en el uri recibo
#un token y automaticamente me registra en la bd de datos de la api con los datos extraidos de google.
#Con ese token ahora puedo acceder a los recursos protegidos de mi api.

#Facebook
#Accedo a http://localhost:8080/oauth2/authorize/facebook?redirect_uri y en el uri recibo
#un token y automaticamente me registra en la bd de datos de la api con los datos extraidos de facebook
#Con ese token ahora puedo acceder a los recursos protegidos de mi api.

#Github
#Accedo a https://github.com/login/oauth/authorize?client_id=f15dac593817d833742a y en el uri recibo un code.
#El code que acabamos de recibir es una clave temporal y lo utilizamos para hacer una petici�n 
#POST a github https://github.com/login/oauth/access_token para que nos de un token de acceso para este usuario.
#Vamos a hacer la llamada incluyendo los siguientes parametros, client_id, client_secret, code (que acabamos de recibir) 
#y si hubieramos tenido un state tambien lo incluir�amos.
#Ahora con el token recibido access_token=5da16386746d7cd605709029683bf6622826a63f&scope=&token_type=bearer
#Vamos a https://api.github.com/user?access_token=5da16386746d7cd605709029683bf6622826a63f Y otebenes todos los
#datos publicos del usuario. En postman vamos a https://api.github.com/user con un GET y en Auth ponemos
#el token. Problema no me registrta en la bd.
      
      
      
